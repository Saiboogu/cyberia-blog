#!/bin/bash

# Linting CSS on every change, before commit
css_file="arise-source/css/main.css"
if git diff --cached --name-only | grep -q "$css_file"; then
    if ! prettier "$css_file" --check --log-level silent; then
        echo "CSS style validation failed. Changes needed:"
        prettier "$css_file" | diff "$css_file" -
        exit 1
    fi
fi

#Making sure we don't commit the wrong URL to the wrong branch
current_branch=$(git symbolic-ref --short HEAD)

# Load project config
CONFIG_FILE="tools/urls.conf"
if [ ! -f "$CONFIG_FILE" ]; then
    echo "Error: Config file not found: $CONFIG_FILE" >&2
    exit 1
fi

# shellcheck source=tools/urls.conf
source "$CONFIG_FILE"

check_and_replace_url() {
    local search_url=$1
    local target_url=$2
    if find arise-source/ -type f \( -iname "*.md" -o -iname "*.css" \) -exec grep -l "$search_url" \;; then
        echo "Replacing $search_url with $target_url"
        find arise-source/ -type f \( -iname "*.md" -o -iname "*.css" \) -exec grep -l "$search_url" \; | while read -r file; do
            echo "Fixing $file"
            sed -i "s/$search_url/$target_url/g" "$file"
        done
    fi
}


if [ "$current_branch" = "blog-prod" ]; then
    check_and_replace_url "$DEV_URL" "$PROD_URL"
    check_and_replace_url "$STAGING_URL" "$PROD_URL"
elif [ "$current_branch" = "staging" ]; then
    check_and_replace_url "$DEV_URL" "$STAGING_URL"
    check_and_replace_url "$PROD_URL" "$STAGING_URL"
fi


# Run arise build on blog-prod and staging branches
# So we don't push a broken commit to origin
if [ "$current_branch" = "blog-prod" ] || [ "$current_branch" = "staging" ]; then
    # Run arise build
build_errors=$(yes | ./arise build -f 2>&1 >/dev/null)
build_status=$?

if [ $build_status -ne 0 ] || [ -n "$build_errors" ]; then
    [ -n "$build_errors" ] && echo "Build errors: $build_errors"
    echo "Build failed - commit aborted"
    exit 1
fi
fi
